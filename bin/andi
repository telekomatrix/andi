#!/usr/bin/env ruby

require File.expand_path( File.join(File.dirname(__FILE__), %w[.. lib andi]))

require 'rubygems'
require 'pp'
require 'user-choices'

# (Neurogami::Andi.help; exit) unless ARGV.size > 1


## Need to add some proper arg handling
#project_name = ARGV.shift.strip
#main_activity = ARGV.shift.strip
#path = ARGV.shift

#Neurogami::Andi.project  project_name, main_activity, path

class AndiChoices < UserChoices::Command
  include UserChoices 

  def add_sources builder
    # Seems that order matter.  What comes first has higher precedence
    builder.add_source(CommandLineSource, :usage, "Usage: ruby #{$0} [options] ")
    builder.add_source(EnvironmentSource, :with_prefix, "andi_")
    builder.add_source(YamlConfigFileSource, :from_file, "andi.yaml") 
  end


  def add_choices builder
    # This sets up help for -h
    
    default_target = 3
    default_package_name = 'com.neurogami'

    builder.add_choice( :target, :type=>:integer, :default => default_target) { | command_line |
      command_line.uses_option("-t", "--target INT", 
             "Android target. Default is #{default_target}")
    }

    builder.add_choice(:base_package, :type=>:string , :default=>default_package_name) { | command_line |
      command_line.uses_option("-b", "--base_package BASE_PACKAGE", 
                   "Base package name (e.g. com.neurogami). Default is #{default_package_name}")
    }


    builder.add_choice(:project_name, :type=>:string  ) { | command_line |
      command_line.uses_option("-p", "--project_name PROJECTNAME", 
                   "Project name (e.g. MyCoolApp). Required.")
    }

    
  end
 
  def execute
    puts "Target #{@user_choices[:target]} will be used." 
    puts "The base package is  #{@user_choices[:base_package]} ."
    if Neurogami::Andi.valid_options?  @user_choices
      Neurogami::Andi.project @user_choices
    else
      warn "\nThere were one or more problems with your parameters: \n\t#{Neurogami::Andi.errors.join("\n\t")}\n"
    end
  end
end

S4tUtils.with_pleasant_exceptions do
  AndiChoices.new.execute
end

